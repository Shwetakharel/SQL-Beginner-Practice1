/* 1. Get the unique (distinct ) job locations in the job_postings_fact table.Order in alphabetical order(ascending order)*/
Select distinct job_location from job_postings_fact order by 1;

/* 2. In the job_postings_fact table get the columns job_id , job_title_short, job_location and job_via columns .And order it in ascending order by job_location*/
Select distinct job_id , job_title_short,job_location, job_via from job_postings_fact order by 3;

/* 3. In the job_postings_fact table get the columns job_id,job_title_short,job_location,job_via and salary_year_avg columns. And only look at rows where job_title_short is 'Data Engineer'*/
Select job_id,job_title_short,job_location,job_via, salary_year_avg from job_postings_fact where job_title_short='Data Engineer'  order by 5;

/* 4. In the job_postings_fact table get the job_id, job_title_short, job_location, job_via and salary_year_avg columns. oNly return rows where the job location is in 'Tampa, FL'*/
Select DISTINCT job_id,job_title_short,job_location,job_via, salary_year_avg from job_postings_fact where job_location='Tampa, FL' order by 5;

/* 5.In the job_postings_fact table get the job_id, job_title_short,job_location,job_via and salary_year_avg columns. Only return 'Full-Time' jobs */
Select DISTINCT job_id,job_title_short,job_location,job_via, salary_year_avg from job_postings_fact where job_schedule_type='Full-Time'order by 5;

/* 6. In the job_postings_fact table get the job_id, job_title_short,job_location,job_via and salary_year_avg columns. Only look at jobs that are not 'Part-time' jobs*/
Select DISTINCT job_id,job_title_short,job_location,job_via, salary_year_avg from job_postings_fact where job_schedule_type<>'Part-Time'order by 5;

/* 7. In the job_postings_fact table get the job_id, job_title_short,job_location,job_via and salary_year_avg columns. Only look at jobs that are not 'via LinkedIn' jobs */
Select DISTINCT job_id,job_title_short,job_location,job_via, salary_year_avg from job_postings_fact where job_schedule_type<>'via LinkedIn'order by 5;

/* 8. In the job_postings_fact table only get jobs that have an average salary of $65000 or greater. Also get the job_id,job_title_short, job_location, job_via and salary_year_avg columns*/
Select distinct job_id,job_title_short, job_location, job_via,salary_year_avg from job_postings_fact where salary_year_avg >= 65000 order by 5;
 
 /* 9. In the job_postings_fact table only get jobs that have an average yearly salary greater than $55000. Also get the job_id,job_title_short, job_location, job_via and salary_year_avg columns*/
Select distinct job_id,job_title_short, job_location, job_via,salary_year_avg from job_postings_fact where salary_year_avg > 55000 order by 5;
 
 /* 10. In the job_postings_fact table only get jobs that have an average yearly salary less than $110000. Also get the job_id,job_title_short, job_location, job_via and salary_year_avg columns*/
 Select distinct job_id,job_title_short, job_location, job_via,salary_year_avg from job_postings_fact where salary_year_avg < 110000 order by 5 desc;
 
/* 11. In the company_dim table find all company names that incluse 'Tech' immediately followed by any single character. Return the name column*/
Select distinct name from company_dim where name like 'Tech_';

 /* 12. Find all the job postings in the job_postings_fact where the job_title is exactly "Engineer" and one character followed after the term. get the job_id,job_title and job_posted_date*/
Select job_id,job_title,job_posted_date from job_postings_fact where job_title like 'Engineer_';
 
/* 13. In the job_postings_fact return the following columns : job_id,job_title_short,job_location,job_via,job_posted_date and salary_year_avg. Also rename the following :job_via to job_posted_site and salary_year_avg to avg_yearly_salary*/
Select distinct job_id ,job_title_short,job_location,job_via job_posted_site, job_posted_date,salary_year_avg avg_yearly_salary from job_postings_fact;

/* 14. In the job_postings_fact table calculate the total sum of the average yearly salary (salary_year_avg) for all job postings that are marked as fully remote
(job_work_from_home i.e True) and divide it by the total count of salary_year_avg.To get the total average yearly salary for fully remote jobs. Ensure to only include 
job postings where a yearly salary is specified(i.e salary_year_avg is not NULL)*/

Select sum(salary_year_avg) as Sum_of_average_year_salary,Count(salary_year_avg) as count_average_year_salary,sum(salary_year_avg)/Count(salary_year_avg) as total_average_yearly_salary
from job_postings_fact
where job_work_from_home=True and 
salary_year_avg is not Null; 

/* 15. In the job_postings_fact table count the total number of job postings that offer health insurance. Use the job_health_insurance column to determine if a job
posting offers health insurance(TRUE means it does not offer health insurance*/

Select count(job_id) as total_number_of_job_postings from job_postings_fact where job_health_insurance=FALSE;

/*In the job_postings_fact table count the number of job postings available for each country. Use the job_country column to group the job postings, and count the number 
of job postings (job_id) within each country group.*/

Select job_country, count(job_id) as total_number_of_job_postings from job_postings_fact group by job_country order by 2 desc;

/*Identify all job postings that have neither an annual average salary(salary_year_avg) nor an hourly average salary(salary_hour_avg) in the job_postings_fact table. Return the 
job_id, job_title,salary_year_avg,salary_hour_avg. This can be useful to look at postings where there's no competition*/

Select job_id,job_title,salary_year_avg,salary_hour_avg from job_postings_fact
where (salary_year_avg is null and salary_hour_avg is null) 
order by 3 , 4 ;

